<project name="MyEMSLClient" basedir="." default="main">

    <property name="lib.dir"     value="lib"/>
    <property name="src.dir"     value="src"/>

    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="tests.dir"   value="${build.dir}/tests"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>
    <property name="report.dir"  value="${build.dir}/junitreport"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
        <fileset dir="${jar.dir}" includes="**/*.jar"/>
    </path>

	<target name="main" depends="clean,jar,jar-release"/>
	
    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile" depends="compile-main"/>

    <target name="compile-main">
	<mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
	<mkdir dir="${jar.dir}" />
        <javac srcdir="src" destdir="${classes.dir}" classpathref="classpath"/>
    </target>

    <target name="jar" depends="jar-main"/>

    <target name="jar-main" depends="compile-main">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}" id="library">
            <manifest>
                <attribute name="Main-Class" value="gov.pnnl.emsl.SWADL.Main"/>
            </manifest>
        </jar>
    </target>

    <target name="jar-release" depends="compile-main">
        <jar destfile="${jar.dir}/${ant.project.name}-release.jar" basedir="${classes.dir}">
            <zipfileset src="${lib.dir}/commons-codec-1.7.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/commons-logging-1.1.1.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/fluent-hc-4.2.3.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/gson-2.2.2.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/httpclient-4.2.3.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/httpclient-cache-4.2.3.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/httpcore-4.2.3.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/httpcore-ab-4.2.3.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/httpcore-nio-4.2.3.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/httpmime-4.2.3.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/ini4j-0.5.2.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/jtar-2.2.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/javatuples-1.2.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/commons-cli-1.2.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/commons-lang3-3.3.2.jar" includes="**/*.java **/*.class"/>
            <zipfileset src="${lib.dir}/jargon-core-3.3.2-beta2-jar-with-dependencies.jar" includes="**/*.java **/*.class"/>
            <manifest>
                <attribute name="Main-Class" value="gov.pnnl.emsl.SWADL.Main"/>
            </manifest>
        </jar>
    </target>

    <target name="junit" depends="jar">
        <mkdir dir="${report.dir}"/>
        <junit printsummary="yes">
            <sysproperty key="javax.net.ssl.trustStore" value="./my_keystore" />
            <sysproperty key="javax.net.ssl.trustStorePassword" value="changeit" />
            <classpath>
                <path refid="classpath"/>
		<pathelement path="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${report.dir}">
                <fileset dir="${src.dir}" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target>
    <target name="junitreport" depends="junit">
        <junitreport todir="${report.dir}">
            <fileset dir="${report.dir}" includes="TEST-*.xml"/>
            <report todir="${report.dir}"/>
        </junitreport>
    </target>

</project>
